namespace Esprima.Ast
{
    public enum Nodes
    {
        AssignmentExpression,
        ArrayExpression,
        BlockStatement,
        BinaryExpression,
        BreakStatement,
        CallExpression,
        CatchClause,
        ChainExpression,
        ConditionalExpression,
        ContinueStatement,
        DoWhileStatement,
        DebuggerStatement,
        EmptyStatement,
        ExpressionStatement,
        ForStatement,
        ForInStatement,
        FunctionDeclaration,
        FunctionExpression,
        Identifier,
        IfStatement,
        Import,
        Literal,
        LabeledStatement,
        LogicalExpression,
        MemberExpression,
        NewExpression,
        ObjectExpression,
        PrivateIdentifier,
        Program,
        Property,
        PropertyDefinition,
        RestElement,
        ReturnStatement,
        SequenceExpression,
        SwitchStatement,
        SwitchCase,
        TemplateElement,
        TemplateLiteral,
        SelfExpression, // ADHOC: Changed from "This"
        ThrowStatement,
        TryStatement,
        UnaryExpression,
        UpdateExpression,
        VariableDeclaration,
        VariableDeclarator,
        WhileStatement,
        WithStatement,
        ArrayPattern,
        AssignmentPattern,
        SpreadElement,
        ObjectPattern,
        ArrowParameterPlaceHolder,
        MetaProperty,
        Super,
        TaggedTemplateExpression,
        YieldExpression,
        ArrowFunctionExpression,
        AwaitExpression,
        ClassBody,
        ClassDeclaration,
        ForeachStatement,
        MethodDeclaration,
        ImportSpecifier,
        ImportDefaultSpecifier,
        ImportNamespaceSpecifier,
        ImportDeclaration,
        ClassExpression,

        // ADHOC
        StaticDeclaration,
        IncludeStatement,
        ReferenceVariableExpression,
        FinalizerStatement,
        MapExpression,
        AttributeDeclaration,
        RequireStatement,
        UndefStatement,
        MethodExpression,
        SourceFileStatement,
        ModuleConstructorStatement,
        PrintStatement,
    };
}
